#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SuwatAligut2x.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="SuwatAligut2x")]
	public partial class SuwatAligut2x_Data_EntitiesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBotarSaMensahe(BotarSaMensahe instance);
    partial void UpdateBotarSaMensahe(BotarSaMensahe instance);
    partial void DeleteBotarSaMensahe(BotarSaMensahe instance);
    partial void InsertKumentaryo(Kumentaryo instance);
    partial void UpdateKumentaryo(Kumentaryo instance);
    partial void DeleteKumentaryo(Kumentaryo instance);
    partial void InsertMensahe(Mensahe instance);
    partial void UpdateMensahe(Mensahe instance);
    partial void DeleteMensahe(Mensahe instance);
    partial void InsertMensaheSaTagIya(MensaheSaTagIya instance);
    partial void UpdateMensaheSaTagIya(MensaheSaTagIya instance);
    partial void DeleteMensaheSaTagIya(MensaheSaTagIya instance);
    partial void InsertOpenIdSaTagIya(OpenIdSaTagIya instance);
    partial void UpdateOpenIdSaTagIya(OpenIdSaTagIya instance);
    partial void DeleteOpenIdSaTagIya(OpenIdSaTagIya instance);
    partial void InsertTagIya(TagIya instance);
    partial void UpdateTagIya(TagIya instance);
    partial void DeleteTagIya(TagIya instance);
    #endregion
		
		public SuwatAligut2x_Data_EntitiesDataContext() : 
				base(global::SuwatAligut2x.Data.Properties.Settings.Default.SuwatAligut2xConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SuwatAligut2x_Data_EntitiesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SuwatAligut2x_Data_EntitiesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SuwatAligut2x_Data_EntitiesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SuwatAligut2x_Data_EntitiesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BotarSaMensahe> BotarSaMensahes
		{
			get
			{
				return this.GetTable<BotarSaMensahe>();
			}
		}
		
		public System.Data.Linq.Table<Kumentaryo> Kumentaryos
		{
			get
			{
				return this.GetTable<Kumentaryo>();
			}
		}
		
		public System.Data.Linq.Table<Mensahe> Mensahes
		{
			get
			{
				return this.GetTable<Mensahe>();
			}
		}
		
		public System.Data.Linq.Table<MensaheSaTagIya> MensaheSaTagIyas
		{
			get
			{
				return this.GetTable<MensaheSaTagIya>();
			}
		}
		
		public System.Data.Linq.Table<OpenIdSaTagIya> OpenIdSaTagIyas
		{
			get
			{
				return this.GetTable<OpenIdSaTagIya>();
			}
		}
		
		public System.Data.Linq.Table<TagIya> TagIyas
		{
			get
			{
				return this.GetTable<TagIya>();
			}
		}
		
		[Function(Name="dbo.SPD_PagKuhaSaMensahe")]
		public int SPD_PagKuhaSaMensahe([Parameter(Name="MessageId", DbType="Int")] System.Nullable<int> messageId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), messageId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SPI_BuhatUgMensahe")]
		public int SPI_BuhatUgMensahe([Parameter(Name="Message", DbType="NVarChar(500)")] string message, [Parameter(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), message, userId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SPI_BotarSaMensahe")]
		public int SPI_BotarSaMensahe([Parameter(Name="MessageId", DbType="Int")] System.Nullable<int> messageId, [Parameter(Name="VotersId", DbType="Int")] System.Nullable<int> votersId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), messageId, votersId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SPI_BuhatUgKumentaryo")]
		public int SPI_BuhatUgKumentaryo([Parameter(Name="Comment", DbType="NVarChar(500)")] string comment, [Parameter(Name="MessageId", DbType="Int")] System.Nullable<int> messageId, [Parameter(Name="CommentorsId", DbType="Int")] System.Nullable<int> commentorsId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), comment, messageId, commentorsId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SPD_PagkuhaSaKumentaryo")]
		public int SPD_PagkuhaSaKumentaryo([Parameter(Name="CommentId", DbType="Int")] System.Nullable<int> commentId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), commentId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SPD_PagKuhaSaOpenId")]
		public int SPD_PagKuhaSaOpenId([Parameter(Name="UserId", DbType="Int")] System.Nullable<int> userId, [Parameter(Name="OpenId", DbType="NVarChar(250)")] string openId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, openId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SPI_PunoUgOpenId")]
		public int SPI_PunoUgOpenId([Parameter(Name="UserId", DbType="Int")] System.Nullable<int> userId, [Parameter(Name="OpenId", DbType="NVarChar(250)")] string openId, [Parameter(Name="FriendlyOpenId", DbType="NVarChar(150)")] string friendlyOpenId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, openId, friendlyOpenId);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SPI_BagOngTagIya")]
		public int SPI_BagOngTagIya([Parameter(Name="OpenId", DbType="NVarChar(250)")] string openId, [Parameter(Name="OpenIdFriendly", DbType="NVarChar(150)")] string openIdFriendly, [Parameter(Name="Email", DbType="NVarChar(125)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), openId, openIdFriendly, email);
			return ((int)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.BotarSaMensahe")]
	public partial class BotarSaMensahe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BotarSaMensaheId;
		
		private int _MessageId;
		
		private int _VotersId;
		
		private EntityRef<Mensahe> _Mensahe;
		
		private EntityRef<TagIya> _TagIya;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBotarSaMensaheIdChanging(int value);
    partial void OnBotarSaMensaheIdChanged();
    partial void OnMessageIdChanging(int value);
    partial void OnMessageIdChanged();
    partial void OnVotersIdChanging(int value);
    partial void OnVotersIdChanged();
    #endregion
		
		public BotarSaMensahe()
		{
			this._Mensahe = default(EntityRef<Mensahe>);
			this._TagIya = default(EntityRef<TagIya>);
			OnCreated();
		}
		
		[Column(Storage="_BotarSaMensaheId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BotarSaMensaheId
		{
			get
			{
				return this._BotarSaMensaheId;
			}
			set
			{
				if ((this._BotarSaMensaheId != value))
				{
					this.OnBotarSaMensaheIdChanging(value);
					this.SendPropertyChanging();
					this._BotarSaMensaheId = value;
					this.SendPropertyChanged("BotarSaMensaheId");
					this.OnBotarSaMensaheIdChanged();
				}
			}
		}
		
		[Column(Storage="_MessageId", DbType="Int NOT NULL")]
		public int MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					if (this._Mensahe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MessageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[Column(Storage="_VotersId", DbType="Int NOT NULL")]
		public int VotersId
		{
			get
			{
				return this._VotersId;
			}
			set
			{
				if ((this._VotersId != value))
				{
					if (this._TagIya.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVotersIdChanging(value);
					this.SendPropertyChanging();
					this._VotersId = value;
					this.SendPropertyChanged("VotersId");
					this.OnVotersIdChanged();
				}
			}
		}
		
		[Association(Name="Mensahe_BotarSaMensahe", Storage="_Mensahe", ThisKey="MessageId", OtherKey="MessageId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Mensahe Mensahe
		{
			get
			{
				return this._Mensahe.Entity;
			}
			set
			{
				Mensahe previousValue = this._Mensahe.Entity;
				if (((previousValue != value) 
							|| (this._Mensahe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mensahe.Entity = null;
						previousValue.BotarSaMensahes.Remove(this);
					}
					this._Mensahe.Entity = value;
					if ((value != null))
					{
						value.BotarSaMensahes.Add(this);
						this._MessageId = value.MessageId;
					}
					else
					{
						this._MessageId = default(int);
					}
					this.SendPropertyChanged("Mensahe");
				}
			}
		}
		
		[Association(Name="TagIya_BotarSaMensahe", Storage="_TagIya", ThisKey="VotersId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TagIya TagIya
		{
			get
			{
				return this._TagIya.Entity;
			}
			set
			{
				TagIya previousValue = this._TagIya.Entity;
				if (((previousValue != value) 
							|| (this._TagIya.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TagIya.Entity = null;
						previousValue.BotarSaMensahes.Remove(this);
					}
					this._TagIya.Entity = value;
					if ((value != null))
					{
						value.BotarSaMensahes.Add(this);
						this._VotersId = value.UserId;
					}
					else
					{
						this._VotersId = default(int);
					}
					this.SendPropertyChanged("TagIya");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Kumentaryo")]
	public partial class Kumentaryo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommentId;
		
		private int _MessageId;
		
		private int _CommentorsId;
		
		private string _Comment;
		
		private System.DateTime _DatePosted;
		
		private System.DateTime _DateEdited;
		
		private EntityRef<Mensahe> _Mensahe;
		
		private EntityRef<TagIya> _TagIya;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommentIdChanging(int value);
    partial void OnCommentIdChanged();
    partial void OnMessageIdChanging(int value);
    partial void OnMessageIdChanged();
    partial void OnCommentorsIdChanging(int value);
    partial void OnCommentorsIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDatePostedChanging(System.DateTime value);
    partial void OnDatePostedChanged();
    partial void OnDateEditedChanging(System.DateTime value);
    partial void OnDateEditedChanged();
    #endregion
		
		public Kumentaryo()
		{
			this._Mensahe = default(EntityRef<Mensahe>);
			this._TagIya = default(EntityRef<TagIya>);
			OnCreated();
		}
		
		[Column(Storage="_CommentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommentId
		{
			get
			{
				return this._CommentId;
			}
			set
			{
				if ((this._CommentId != value))
				{
					this.OnCommentIdChanging(value);
					this.SendPropertyChanging();
					this._CommentId = value;
					this.SendPropertyChanged("CommentId");
					this.OnCommentIdChanged();
				}
			}
		}
		
		[Column(Storage="_MessageId", DbType="Int NOT NULL")]
		public int MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					if (this._Mensahe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MessageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[Column(Storage="_CommentorsId", DbType="Int NOT NULL")]
		public int CommentorsId
		{
			get
			{
				return this._CommentorsId;
			}
			set
			{
				if ((this._CommentorsId != value))
				{
					if (this._TagIya.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommentorsIdChanging(value);
					this.SendPropertyChanging();
					this._CommentorsId = value;
					this.SendPropertyChanged("CommentorsId");
					this.OnCommentorsIdChanged();
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[Column(Storage="_DatePosted", DbType="DateTime NOT NULL")]
		public System.DateTime DatePosted
		{
			get
			{
				return this._DatePosted;
			}
			set
			{
				if ((this._DatePosted != value))
				{
					this.OnDatePostedChanging(value);
					this.SendPropertyChanging();
					this._DatePosted = value;
					this.SendPropertyChanged("DatePosted");
					this.OnDatePostedChanged();
				}
			}
		}
		
		[Column(Storage="_DateEdited", DbType="DateTime NOT NULL")]
		public System.DateTime DateEdited
		{
			get
			{
				return this._DateEdited;
			}
			set
			{
				if ((this._DateEdited != value))
				{
					this.OnDateEditedChanging(value);
					this.SendPropertyChanging();
					this._DateEdited = value;
					this.SendPropertyChanged("DateEdited");
					this.OnDateEditedChanged();
				}
			}
		}
		
		[Association(Name="Mensahe_Kumentaryo", Storage="_Mensahe", ThisKey="MessageId", OtherKey="MessageId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Mensahe Mensahe
		{
			get
			{
				return this._Mensahe.Entity;
			}
			set
			{
				Mensahe previousValue = this._Mensahe.Entity;
				if (((previousValue != value) 
							|| (this._Mensahe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mensahe.Entity = null;
						previousValue.Kumentaryos.Remove(this);
					}
					this._Mensahe.Entity = value;
					if ((value != null))
					{
						value.Kumentaryos.Add(this);
						this._MessageId = value.MessageId;
					}
					else
					{
						this._MessageId = default(int);
					}
					this.SendPropertyChanged("Mensahe");
				}
			}
		}
		
		[Association(Name="TagIya_Kumentaryo", Storage="_TagIya", ThisKey="CommentorsId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TagIya TagIya
		{
			get
			{
				return this._TagIya.Entity;
			}
			set
			{
				TagIya previousValue = this._TagIya.Entity;
				if (((previousValue != value) 
							|| (this._TagIya.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TagIya.Entity = null;
						previousValue.Kumentaryos.Remove(this);
					}
					this._TagIya.Entity = value;
					if ((value != null))
					{
						value.Kumentaryos.Add(this);
						this._CommentorsId = value.UserId;
					}
					else
					{
						this._CommentorsId = default(int);
					}
					this.SendPropertyChanged("TagIya");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Mensahe")]
	public partial class Mensahe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageId;
		
		private string _Message;
		
		private System.DateTime _DatePosted;
		
		private System.DateTime _DateEdited;
		
		private EntitySet<BotarSaMensahe> _BotarSaMensahes;
		
		private EntitySet<Kumentaryo> _Kumentaryos;
		
		private EntitySet<MensaheSaTagIya> _MensaheSaTagIyas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIdChanging(int value);
    partial void OnMessageIdChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDatePostedChanging(System.DateTime value);
    partial void OnDatePostedChanged();
    partial void OnDateEditedChanging(System.DateTime value);
    partial void OnDateEditedChanged();
    #endregion
		
		public Mensahe()
		{
			this._BotarSaMensahes = new EntitySet<BotarSaMensahe>(new Action<BotarSaMensahe>(this.attach_BotarSaMensahes), new Action<BotarSaMensahe>(this.detach_BotarSaMensahes));
			this._Kumentaryos = new EntitySet<Kumentaryo>(new Action<Kumentaryo>(this.attach_Kumentaryos), new Action<Kumentaryo>(this.detach_Kumentaryos));
			this._MensaheSaTagIyas = new EntitySet<MensaheSaTagIya>(new Action<MensaheSaTagIya>(this.attach_MensaheSaTagIyas), new Action<MensaheSaTagIya>(this.detach_MensaheSaTagIyas));
			OnCreated();
		}
		
		[Column(Storage="_MessageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MessageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[Column(Storage="_Message", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[Column(Storage="_DatePosted", DbType="DateTime NOT NULL")]
		public System.DateTime DatePosted
		{
			get
			{
				return this._DatePosted;
			}
			set
			{
				if ((this._DatePosted != value))
				{
					this.OnDatePostedChanging(value);
					this.SendPropertyChanging();
					this._DatePosted = value;
					this.SendPropertyChanged("DatePosted");
					this.OnDatePostedChanged();
				}
			}
		}
		
		[Column(Storage="_DateEdited", DbType="DateTime NOT NULL")]
		public System.DateTime DateEdited
		{
			get
			{
				return this._DateEdited;
			}
			set
			{
				if ((this._DateEdited != value))
				{
					this.OnDateEditedChanging(value);
					this.SendPropertyChanging();
					this._DateEdited = value;
					this.SendPropertyChanged("DateEdited");
					this.OnDateEditedChanged();
				}
			}
		}
		
		[Association(Name="Mensahe_BotarSaMensahe", Storage="_BotarSaMensahes", ThisKey="MessageId", OtherKey="MessageId")]
		public EntitySet<BotarSaMensahe> BotarSaMensahes
		{
			get
			{
				return this._BotarSaMensahes;
			}
			set
			{
				this._BotarSaMensahes.Assign(value);
			}
		}
		
		[Association(Name="Mensahe_Kumentaryo", Storage="_Kumentaryos", ThisKey="MessageId", OtherKey="MessageId")]
		public EntitySet<Kumentaryo> Kumentaryos
		{
			get
			{
				return this._Kumentaryos;
			}
			set
			{
				this._Kumentaryos.Assign(value);
			}
		}
		
		[Association(Name="Mensahe_MensaheSaTagIya", Storage="_MensaheSaTagIyas", ThisKey="MessageId", OtherKey="MessageId")]
		public EntitySet<MensaheSaTagIya> MensaheSaTagIyas
		{
			get
			{
				return this._MensaheSaTagIyas;
			}
			set
			{
				this._MensaheSaTagIyas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BotarSaMensahes(BotarSaMensahe entity)
		{
			this.SendPropertyChanging();
			entity.Mensahe = this;
		}
		
		private void detach_BotarSaMensahes(BotarSaMensahe entity)
		{
			this.SendPropertyChanging();
			entity.Mensahe = null;
		}
		
		private void attach_Kumentaryos(Kumentaryo entity)
		{
			this.SendPropertyChanging();
			entity.Mensahe = this;
		}
		
		private void detach_Kumentaryos(Kumentaryo entity)
		{
			this.SendPropertyChanging();
			entity.Mensahe = null;
		}
		
		private void attach_MensaheSaTagIyas(MensaheSaTagIya entity)
		{
			this.SendPropertyChanging();
			entity.Mensahe = this;
		}
		
		private void detach_MensaheSaTagIyas(MensaheSaTagIya entity)
		{
			this.SendPropertyChanging();
			entity.Mensahe = null;
		}
	}
	
	[Table(Name="dbo.MensaheSaTagIya")]
	public partial class MensaheSaTagIya : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MensaheSaTagIyaId;
		
		private int _UserId;
		
		private int _MessageId;
		
		private EntityRef<Mensahe> _Mensahe;
		
		private EntityRef<TagIya> _TagIya;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMensaheSaTagIyaIdChanging(int value);
    partial void OnMensaheSaTagIyaIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnMessageIdChanging(int value);
    partial void OnMessageIdChanged();
    #endregion
		
		public MensaheSaTagIya()
		{
			this._Mensahe = default(EntityRef<Mensahe>);
			this._TagIya = default(EntityRef<TagIya>);
			OnCreated();
		}
		
		[Column(Storage="_MensaheSaTagIyaId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MensaheSaTagIyaId
		{
			get
			{
				return this._MensaheSaTagIyaId;
			}
			set
			{
				if ((this._MensaheSaTagIyaId != value))
				{
					this.OnMensaheSaTagIyaIdChanging(value);
					this.SendPropertyChanging();
					this._MensaheSaTagIyaId = value;
					this.SendPropertyChanged("MensaheSaTagIyaId");
					this.OnMensaheSaTagIyaIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._TagIya.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_MessageId", DbType="Int NOT NULL")]
		public int MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					if (this._Mensahe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MessageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[Association(Name="Mensahe_MensaheSaTagIya", Storage="_Mensahe", ThisKey="MessageId", OtherKey="MessageId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Mensahe Mensahe
		{
			get
			{
				return this._Mensahe.Entity;
			}
			set
			{
				Mensahe previousValue = this._Mensahe.Entity;
				if (((previousValue != value) 
							|| (this._Mensahe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mensahe.Entity = null;
						previousValue.MensaheSaTagIyas.Remove(this);
					}
					this._Mensahe.Entity = value;
					if ((value != null))
					{
						value.MensaheSaTagIyas.Add(this);
						this._MessageId = value.MessageId;
					}
					else
					{
						this._MessageId = default(int);
					}
					this.SendPropertyChanged("Mensahe");
				}
			}
		}
		
		[Association(Name="TagIya_MensaheSaTagIya", Storage="_TagIya", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TagIya TagIya
		{
			get
			{
				return this._TagIya.Entity;
			}
			set
			{
				TagIya previousValue = this._TagIya.Entity;
				if (((previousValue != value) 
							|| (this._TagIya.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TagIya.Entity = null;
						previousValue.MensaheSaTagIyas.Remove(this);
					}
					this._TagIya.Entity = value;
					if ((value != null))
					{
						value.MensaheSaTagIyas.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("TagIya");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.OpenIdSaTagIya")]
	public partial class OpenIdSaTagIya : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OpenId;
		
		private int _UserId;
		
		private string _FriendlyOpenId;
		
		private System.DateTime _DateCreated;
		
		private EntityRef<TagIya> _TagIya;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOpenIdChanging(string value);
    partial void OnOpenIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnFriendlyOpenIdChanging(string value);
    partial void OnFriendlyOpenIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public OpenIdSaTagIya()
		{
			this._TagIya = default(EntityRef<TagIya>);
			OnCreated();
		}
		
		[Column(Storage="_OpenId", DbType="NVarChar(250) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OpenId
		{
			get
			{
				return this._OpenId;
			}
			set
			{
				if ((this._OpenId != value))
				{
					this.OnOpenIdChanging(value);
					this.SendPropertyChanging();
					this._OpenId = value;
					this.SendPropertyChanged("OpenId");
					this.OnOpenIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._TagIya.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_FriendlyOpenId", DbType="NVarChar(150)")]
		public string FriendlyOpenId
		{
			get
			{
				return this._FriendlyOpenId;
			}
			set
			{
				if ((this._FriendlyOpenId != value))
				{
					this.OnFriendlyOpenIdChanging(value);
					this.SendPropertyChanging();
					this._FriendlyOpenId = value;
					this.SendPropertyChanged("FriendlyOpenId");
					this.OnFriendlyOpenIdChanged();
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[Association(Name="TagIya_OpenIdSaTagIya", Storage="_TagIya", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TagIya TagIya
		{
			get
			{
				return this._TagIya.Entity;
			}
			set
			{
				TagIya previousValue = this._TagIya.Entity;
				if (((previousValue != value) 
							|| (this._TagIya.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TagIya.Entity = null;
						previousValue.OpenIdSaTagIyas.Remove(this);
					}
					this._TagIya.Entity = value;
					if ((value != null))
					{
						value.OpenIdSaTagIyas.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("TagIya");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TagIya")]
	public partial class TagIya : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _ScreenName;
		
		private string _Gravatar;
		
		private string _RealName;
		
		private string _Location;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private System.DateTime _DateCreated;
		
		private EntitySet<BotarSaMensahe> _BotarSaMensahes;
		
		private EntitySet<Kumentaryo> _Kumentaryos;
		
		private EntitySet<MensaheSaTagIya> _MensaheSaTagIyas;
		
		private EntitySet<OpenIdSaTagIya> _OpenIdSaTagIyas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnScreenNameChanging(string value);
    partial void OnScreenNameChanged();
    partial void OnGravatarChanging(string value);
    partial void OnGravatarChanged();
    partial void OnRealNameChanging(string value);
    partial void OnRealNameChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public TagIya()
		{
			this._BotarSaMensahes = new EntitySet<BotarSaMensahe>(new Action<BotarSaMensahe>(this.attach_BotarSaMensahes), new Action<BotarSaMensahe>(this.detach_BotarSaMensahes));
			this._Kumentaryos = new EntitySet<Kumentaryo>(new Action<Kumentaryo>(this.attach_Kumentaryos), new Action<Kumentaryo>(this.detach_Kumentaryos));
			this._MensaheSaTagIyas = new EntitySet<MensaheSaTagIya>(new Action<MensaheSaTagIya>(this.attach_MensaheSaTagIyas), new Action<MensaheSaTagIya>(this.detach_MensaheSaTagIyas));
			this._OpenIdSaTagIyas = new EntitySet<OpenIdSaTagIya>(new Action<OpenIdSaTagIya>(this.attach_OpenIdSaTagIyas), new Action<OpenIdSaTagIya>(this.detach_OpenIdSaTagIyas));
			OnCreated();
		}
		
		[Column(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_ScreenName", DbType="NVarChar(20)")]
		public string ScreenName
		{
			get
			{
				return this._ScreenName;
			}
			set
			{
				if ((this._ScreenName != value))
				{
					this.OnScreenNameChanging(value);
					this.SendPropertyChanging();
					this._ScreenName = value;
					this.SendPropertyChanged("ScreenName");
					this.OnScreenNameChanged();
				}
			}
		}
		
		[Column(Storage="_Gravatar", DbType="NVarChar(125)")]
		public string Gravatar
		{
			get
			{
				return this._Gravatar;
			}
			set
			{
				if ((this._Gravatar != value))
				{
					this.OnGravatarChanging(value);
					this.SendPropertyChanging();
					this._Gravatar = value;
					this.SendPropertyChanged("Gravatar");
					this.OnGravatarChanged();
				}
			}
		}
		
		[Column(Storage="_RealName", DbType="NVarChar(50)")]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this.OnRealNameChanging(value);
					this.SendPropertyChanging();
					this._RealName = value;
					this.SendPropertyChanged("RealName");
					this.OnRealNameChanged();
				}
			}
		}
		
		[Column(Storage="_Location", DbType="NVarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[Column(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[Association(Name="TagIya_BotarSaMensahe", Storage="_BotarSaMensahes", ThisKey="UserId", OtherKey="VotersId")]
		public EntitySet<BotarSaMensahe> BotarSaMensahes
		{
			get
			{
				return this._BotarSaMensahes;
			}
			set
			{
				this._BotarSaMensahes.Assign(value);
			}
		}
		
		[Association(Name="TagIya_Kumentaryo", Storage="_Kumentaryos", ThisKey="UserId", OtherKey="CommentorsId")]
		public EntitySet<Kumentaryo> Kumentaryos
		{
			get
			{
				return this._Kumentaryos;
			}
			set
			{
				this._Kumentaryos.Assign(value);
			}
		}
		
		[Association(Name="TagIya_MensaheSaTagIya", Storage="_MensaheSaTagIyas", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<MensaheSaTagIya> MensaheSaTagIyas
		{
			get
			{
				return this._MensaheSaTagIyas;
			}
			set
			{
				this._MensaheSaTagIyas.Assign(value);
			}
		}
		
		[Association(Name="TagIya_OpenIdSaTagIya", Storage="_OpenIdSaTagIyas", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<OpenIdSaTagIya> OpenIdSaTagIyas
		{
			get
			{
				return this._OpenIdSaTagIyas;
			}
			set
			{
				this._OpenIdSaTagIyas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BotarSaMensahes(BotarSaMensahe entity)
		{
			this.SendPropertyChanging();
			entity.TagIya = this;
		}
		
		private void detach_BotarSaMensahes(BotarSaMensahe entity)
		{
			this.SendPropertyChanging();
			entity.TagIya = null;
		}
		
		private void attach_Kumentaryos(Kumentaryo entity)
		{
			this.SendPropertyChanging();
			entity.TagIya = this;
		}
		
		private void detach_Kumentaryos(Kumentaryo entity)
		{
			this.SendPropertyChanging();
			entity.TagIya = null;
		}
		
		private void attach_MensaheSaTagIyas(MensaheSaTagIya entity)
		{
			this.SendPropertyChanging();
			entity.TagIya = this;
		}
		
		private void detach_MensaheSaTagIyas(MensaheSaTagIya entity)
		{
			this.SendPropertyChanging();
			entity.TagIya = null;
		}
		
		private void attach_OpenIdSaTagIyas(OpenIdSaTagIya entity)
		{
			this.SendPropertyChanging();
			entity.TagIya = this;
		}
		
		private void detach_OpenIdSaTagIyas(OpenIdSaTagIya entity)
		{
			this.SendPropertyChanging();
			entity.TagIya = null;
		}
	}
}
#pragma warning restore 1591
